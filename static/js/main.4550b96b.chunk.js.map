{"version":3,"sources":["Tableau.js","Form.js","Table/Time.js","App.js","serviceWorker.js","index.js"],"names":["Tableau","submit","e","a","confirmAlert","title","message","buttons","label","onClick","_this","props","suppr","console","log","_this2","this","react_default","createElement","className","scope","users","length","map","user","Produits","id","Prix","aria-label","customUI","_ref","onClose","name","placeholder","preventDefault","test","document","forms","elements","value","updateUser","colSpan","Component","Form","initial","_useState","useState","_useState2","Object","slicedToArray","setUser","changed","event","_event$target","target","objectSpread","defineProperty","onSubmit","ajouter","setCount","count","type","onChange","Time","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","dateHMS","seconds","format","join","val","Math","floor","slice","affichage","i","c","split","heurEnSec","parseInt","ch","setState","chr","g","h","state","date","Date","rdv","timerID","setInterval","tick","clearInterval","getHours","getMinutes","getSeconds","m","s","App","setUsers","_useState3","_useState4","src_Form","substr","toUpperCase","toLowerCase","concat","toConsumableArray","Table_Time","src_Tableau","filter","edit","somme","total","numberFormat","Intl","NumberFormat","updatedUser","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4550b96b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\n\nclass Tableau extends Component {\n  submit = (e,a) => {\n    confirmAlert({\n      title: 'suppression d/heure',\n      message:a ,\n      buttons: [\n        {\n          label: 'OUI',\n          onClick: () => this.props.suppr(e)\n        },\n        {\n          label: 'NON',\n          onClick: () => console.log('suppression refusée')\n        }\n      ],\n      \n    })\n  }\n\n  render() {\n    return(\n      <div>\n        \n        \n      <table className=\"table table-hover table-bordered\">\n      <thead>\n        <tr className=\"table\">\n          \n          <th scope=\"col\">Heure</th>\n          <th scope=\"col\">Tache à faire</th>\n          <th scope=\"col\" className=\"act\">Actions</th>\n        </tr>\n      </thead>\n      <tbody  >\n        {this.props.users.length > 0 ? (\n          this.props.users.map(user => (\n            <tr>\n              \n              <td>{user.Produits}</td>\n              <td id=\"prix\">{user.Prix}</td>\n              <td>\n\n\n                <div className=\"row\">\n                \n                    \n                    <button aria-label=\"Supprimer\" id=\"suppr\"\n                       onClick={() => this.submit(user.id,user.Produits)} className =\"btn btn-danger\" > <e id=\"ex\">X</e></button>\n                    \n\n    \n                    <button  className =\"btn btn-success\" id='edit'\n                    onClick={(e) => {\n                      confirmAlert({\n                          customUI: ({ onClose }) => {\n                            return (  \n                              <form id='ID'>\n                                <center>\n                                  <div>\n                                    <input name='input' placeholder={ user.Prix } id=\"e\" className=\"modifier\"></input><br/>\n                                    \n                                    <div id=\"gt\"></div>                                             \n                                    <button id=\"g\" className=\"btn btn-dark\"\n                                    onClick={() => {\n                                      e.preventDefault()\n                                      \n                                      var test = document.forms['ID'].elements['input'].value\n                                        \n                                        \n                                          user.Prix = test;\n                                          this.props.updateUser(user.id, user)\n                                        \n                                          onClose();\n                                        \n                                      }\n                                    } \n                                    >Ok</button>\n\n                                    <button id=\"l\" className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n                                  </div>\n                                </center>\n                              </form>\n                            );\n                          }\n                        })\n                  }\n                }>\n                      Edit\n                    </button>\n                    \n                </div>\n              \n         \n                \n          \n            \n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={4}></td>\n          </tr>\n        )}\n      </tbody>\n      </table>\n\n  </div> \n      )\n      }\n  }\n\nexport default Tableau;","import React, { useState } from 'react'\n\n\nconst Form = props => {\n   const initial = { id: null, Produits: '', Prix: '' }\n   const [ user, setUser ] = useState(initial)\n   const changed = event => {\n   const { name, value } = event.target\n   setUser({ ...user, [name]: value })\n }\n\n\treturn (\n\t\t<form \n      onSubmit={event => {\n         event.preventDefault()\n         \n         if (!user.Produits || !user.Prix) return\n\n            props.ajouter(user)\n            props.setCount(props.count + 1)\n            setUser(initial)\n            \n   \n       }}>\n         <div className=\"row\">\n            <div className=\"col-md-4\"><label>Heure</label>\n\t\t\t         <input placeholder=\"00:00:00\" type=\"text\" name=\"Produits\" className=\"id1\" value={user.Produits} onChange={changed}/>\n            </div>\n            <div className=\"col-md-4 gag\">\n                   <div><label>Tache</label></div> \n\t\t\t         <textarea id='texte' type=\"text\" name=\"Prix\"   value={user.Prix} onChange={changed} ></textarea>\n            </div>\n            <div className=\"col-md-4\">\n               <button id=\"ajout\" className=\"btn btn-primary\">Ajouter</button>\n            </div>\n         </div>\n         \n       \n\t\t</form>\n   )\n}\nexport default Form","import React, {Component} from 'react';\n\nclass Time extends Component { \n    constructor(props) { \n        super(props); \n        this.state = {date: new Date(),\n                        rdv:'',\n                        chr:'',\n                        a:''}; \n        \n    } \n\n    componentDidMount() { \n        this.timerID = setInterval(\n            () => this.tick(), \n            1000 \n        ); \n    } \n\n    componentWillUnmount() { \n        clearInterval(this.timerID); \n    } \n\n    tick() { \n        this.setState({ \n        date: new Date() ,\n        rdv: this.affichage(this.heurEnSec(this.state.date.getHours(),this.state.date.getMinutes(),this.state.date.getSeconds()))\n        }); \n    } \n    heurEnSec(h,m,s){\n        return h*3600+m*60+s\n    }\n\n    \n\n    dateHMS=(seconds)=> {\n        const hours = seconds / 3600\n        const minutes = (seconds % 3600) / 60\n        seconds %= 60\n      \n        return [hours, minutes, seconds].map(this.format).join(':')\n      }\n    format =(val)=> {\n        return ('0' + Math.floor(val)).slice(-2)\n    }\n\n     affichage=(a)=>{\n        \n          for(let i=0;i<this.props.users.length;i++){\n             let c= this.props.users[i].Produits.split(':')\n              if(a<this.heurEnSec(parseInt(c[0]),parseInt(c[1]),parseInt(c[2]))){\n                  // i=this.props.users.length\n                  console.log(\"tache a faire\",this.props.users[i].Prix)\n                  let ch=this.heurEnSec(parseInt(c[0]),parseInt(c[1]),parseInt(c[2]))-a\n                  this.setState({\n                    chr:this.dateHMS(ch)\n                  })\n                  let g= this.props.users[i].Prix\n                  let h= this.props.users[i].Produits\n                  this.setState({\n                    a:h\n                  })\n                  i=this.props.users.length\n                  return g \n                  \n              }\n          }\n        \n          \n      }\n      \n   \n\n    render() { \n    return (\n     <div className = 'time'> \n     \n     <p id ='time'>{this.state.date.getHours()<=9?\"0\"+this.state.date.getHours():this.state.date.getHours()}:{this.state.date.getMinutes()<=9?\"0\"+this.state.date.getMinutes():this.state.date.getMinutes()}:{this.state.date.getSeconds()<=9?\"0\"+this.state.date.getSeconds():this.state.date.getSeconds()}</p> \n        <p >\n          <label id='tach'>Tache à faire : </label> \n           <span id='rdv'>{this.state.rdv}&nbsp;\n            <label id='a'> à </label>&nbsp;\n            <label  id ='prec'>{this.state.a}</label>\n           </span> \n        </p>\n     <p ><label id='chro'>Temps restant : </label>   <span id='chr'>{this.state.chr}</span></p>\n     </div> \n    ); \n    } \n}\nexport default Time","import React, { useState } from 'react';\nimport Tableau from './Tableau';\nimport Form from './Form';\nimport './Form.css';\nimport './Tableau.css';\nimport Time from './Table/Time'\nimport './Table/time.css';\n\n\nconst App = () => {\n    const usersData = []\n\n\n    const updateUser = (id, updatedUser) => {\n      setUsers(users.map(user => (user.id === id ? updatedUser : user)))\n    }\n  \n\t\tconst [ users, setUsers ] = useState(usersData)\n    const [count, setCount] = useState(0);\n\n    const edit =(id,a)  => {\n    \n     users.map(user => (user.id === id ?  user.Prix=a:user.Prix ))\n      \n      console.log(id);\n      console.log(a);\n      \n    }\n\n    const ajouter = user => {\n      user.id = count\n      user.Produits= user.Produits.substr(0,1).toUpperCase()+\tuser.Produits.substr(1,user.Produits.length).toLowerCase()\n      setUsers([ ...users, user ])\n      \n    }\n    const suppr = id => {\n        setUsers(users.filter(user => user.id !== id))\n    }\n    \n\n    const somme=()=>{\n      let total=0;\n      for(let i=0;i<users.length;i++){\n          total=total+parseInt(users[i].Prix);\n      }\n       let a=[total]\n         \n      var numberFormat = new Intl.NumberFormat(\"es-ES\");\n      var formatted = a.map(numberFormat.format);\n      \n      return formatted.join(\"; \")\n      }\n\n    return (\n      <div  className=\"container\">\n      <div id ='bod' className=\"flex-row\">\n        <div className=\"flex-large\">\n          <Form  ajouter={ajouter} setCount={setCount} count={count}/>\n        </div>\n        <div>\n          <Time  users={users}/>\n        </div>\n        <div className=\"flex-large\">\n          <Tableau  users={users} suppr={suppr} edit={edit} somme={somme}  updateUser={updateUser}/>\n        </div>\n      </div>\n    </div>\n    )\n  };\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}